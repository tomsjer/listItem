.gu-mirror {
  position: fixed !important;
  margin: 0 !important;
  z-index: 9999 !important;
  opacity: 0.8;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=80)";
  filter: alpha(opacity=80); }

.gu-hide {
  display: none !important; }

.gu-unselectable {
  -webkit-user-select: none !important;
  -moz-user-select: none !important;
  -ms-user-select: none !important;
  user-select: none !important; }

.gu-transit {
  opacity: 0.2;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=20)";
  filter: alpha(opacity=20); }

h1, h2, h3, h4, h5 {
  margin: 0.6em auto; }

p {
  margin: 0.5em auto;
  line-height: 1em; }

.btn {
  font-family: monospace;
  font-weight: 700;
  color: #ddd;
  background: #555;
  text-decoration: none !important;
  transition: background 0.25s ease, color 0.25s ease;
  font-size: 32px;
  border: none;
  text-align: center;
  line-height: 48px;
  border-radius: 50%;
  width: 48px;
  height: 48px;
  display: inline-block;
  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.2);
  cursor: pointer; }
  .btn:hover {
    background: #151515;
    color: #9d9d9d; }
  .btn:active {
    background: #aaaaaa;
    color: #222222; }
  .btn .material-icons {
    color: #ddd;
    line-height: 48px !important; }
  .btn.btn-sm {
    width: 32px;
    height: 32px;
    font-size: 24px;
    line-height: 32px; }
    .btn.btn-sm .material-icons {
      font-size: 20px;
      color: #ddd;
      line-height: 32px !important; }

.tooltip {
  padding: 16px;
  background: #f0f0f0;
  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.2);
  position: absolute;
  z-index: 100;
  border-radius: 4px;
  transition: opacity 0.5s ease; }
  .tooltip:before, .tooltip:after {
    content: '';
    display: block;
    width: 0;
    height: 0;
    position: absolute;
    top: 50%;
    transform: translateY(-50%) rotate(45deg); }
  .tooltip:after {
    right: -4px;
    border-right: solid 16px #f0f0f0;
    border-bottom: solid 16px transparent; }

.preloader-wrapper {
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1000;
  background: #ddd;
  transition: opacity 0.75s ease;
  opacity: 1; }
  .preloader-wrapper .preloader-container {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); }
    .preloader-wrapper .preloader-container .preloader {
      display: block;
      margin: auto;
      position: relative;
      width: 48px;
      height: 48px;
      background: rgba(100, 100, 100, 0.1);
      animation: rotate-y 1.25s ease infinite; }

@keyframes rotate-y {
  0% {
    background: rgba(100, 100, 100, 0.1);
    transform: translate3d(0, 0, 0) rotateY(360deg); }
  27% {
    background: rgba(100, 100, 100, 0.3);
    transform: translate3d(0, 100, 0) rotateY(180deg); }
  37% {
    transform: translate3d(0, 0, 0) rotateY(0deg);
    background: rgba(100, 100, 100, 0.15); }
  66% {
    background: rgba(100, 100, 100, 0.12); }
  100% {
    transform: translate3d(0, 0, 0) rotateY(0deg);
    background: rgba(100, 100, 100, 0.1); } }

#app {
  position: relative;
  width: 100%;
  height: 100%; }
  #app .tooltip {
    opacity: 0;
    bottom: 24px;
    right: 100px; }
  #app main {
    width: 66.66%;
    position: relative;
    float: right;
    height: 100%;
    overflow: hidden; }
    #app main .item-active {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%); }
    #app main .counter {
      position: absolute;
      bottom: 32px;
      left: 32px; }
    #app main .btn-add {
      position: absolute;
      bottom: 32px;
      right: 32px; }
  #app.no-items .tooltip {
    opacity: 1; }

aside.item-list {
  width: 33.33%;
  height: 100%;
  position: relative;
  float: left;
  overflow-y: scroll;
  padding: 16px; }
  aside.item-list .wrapper {
    min-height: 100%; }
  aside.item-list .item {
    border-bottom: dashed 1px #a6a6a6;
    overflow: hidden;
    opacity: 0.8;
    position: relative;
    cursor: move;
    /* fallback if grab cursor is unsupported */
    cursor: grab;
    cursor: -moz-grab;
    cursor: -webkit-grab; }
    aside.item-list .item .img-container {
      position: relative;
      float: left;
      width: 100px;
      height: 100px;
      background: #555; }
      aside.item-list .item .img-container img {
        max-width: 100%;
        min-width: 100px;
        height: auto;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        opacity: 1;
        transition: opacity 0.25s ease; }
      aside.item-list .item .img-container.loading {
        animation: rotate-y 1.25s ease infinite; }
        aside.item-list .item .img-container.loading img {
          opacity: 0; }
      aside.item-list .item .img-container .material-icons.placeholder {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        color: #ccc;
        font-size: 32px; }
    aside.item-list .item p {
      width: calc(100% - 100px);
      height: 100px;
      text-overflow: ellipsis;
      overflow: hidden;
      position: relative;
      float: left;
      margin: 0;
      padding: 8px;
      font-weight: 100;
      font-size: 14px;
      color: #666; }
    aside.item-list .item .btn {
      position: absolute;
      right: 8px;
      opacity: 0;
      transition: opacity 0.25s ease; }
      aside.item-list .item .btn.btn-delete {
        top: 8px; }
      aside.item-list .item .btn.btn-edit {
        top: 48px; }
    aside.item-list .item:hover .btn {
      opacity: 1; }
    aside.item-list .item.active, aside.item-list .item:hover {
      opacity: 1;
      background: #f0f0f0; }
    aside.item-list .item.gu-mirror {
      background: white;
      opacity: 1;
      box-shadow: 8px 8px 0 rgba(100, 100, 100, 0.25);
      border-bottom: 0;
      cursor: grabbing;
      cursor: -moz-grabbing;
      cursor: -webkit-grabbing; }
      aside.item-list .item.gu-mirror .btn {
        display: none; }
    aside.item-list .item.gu-transit {
      transition: background 0.5s ease;
      background: #ccc; }
      aside.item-list .item.gu-transit .btn {
        display: none; }
      aside.item-list .item.gu-transit > div {
        transition: opacity 0.5s ease;
        opacity: 0; }
  aside.item-list .no-items {
    position: relative;
    width: 100%;
    height: 100%; }

main .item-active {
  padding: 16px;
  background: #f0f0f0;
  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.2); }
  main .item-active .item-active-img, main .item-active .no-items {
    position: relative;
    margin: auto;
    display: block;
    margin-bottom: 16px;
    width: 320px;
    height: 320px;
    background: #dedede; }
    main .item-active .item-active-img img, main .item-active .no-items img {
      width: 100%;
      height: auto;
      object-fit: cover; }
  main .item-active .item-active-txt {
    width: 320px;
    position: relative;
    margin: auto;
    display: block; }
  main .item-active .btn-edit {
    position: absolute;
    right: -24px;
    bottom: -24px;
    opacity: 0;
    transition: opacity 0.25s ease; }
  main .item-active:hover .btn-edit {
    opacity: 1 !important; }
  main .item-active.item-edit .item-active-img {
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center; }
    main .item-active.item-edit .item-active-img:hover .btn-upload {
      opacity: 1 !important; }
    main .item-active.item-edit .item-active-img span.error {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      top: 70%;
      color: #e68770;
      font-size: 14px;
      display: none; }
    main .item-active.item-edit .item-active-img.error {
      border: solid 1px #e68770; }
      main .item-active.item-edit .item-active-img.error span.error {
        display: block; }
  main .item-active.item-edit .btn-delete {
    position: absolute;
    top: -24px;
    right: -24px; }
  main .item-active.item-edit .btn-upload {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    opacity: 0.5;
    transition: opacity 0.25s ease; }
  main .item-active.item-edit .btn-ok {
    position: absolute;
    bottom: -24px;
    right: -24px; }
  main .item-active.item-edit textarea {
    width: 100%;
    height: 100%;
    margin: 0;
    position: relative;
    display: inline-block;
    min-height: 108px;
    margin-bottom: -4px;
    font-size: 16px;
    border: none;
    background: rgba(255, 255, 255, 0.75);
    padding: 8px; }
    main .item-active.item-edit textarea:focus {
      outline: 0; }
  main .item-active .no-items {
    margin-bottom: 0; }
    main .item-active .no-items h1 {
      text-align: center;
      font-weight: 700;
      font-size: 36px;
      padding-top: calc(40% - 24px);
      margin: 0; }
    main .item-active .no-items p {
      text-align: center;
      margin-top: 100px; }

.counter {
  padding: 16px;
  background: #f0f0f0;
  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.2);
  padding: 0 8px; }

@keyframes slidein {
  0% {
    transform: translate3d(-50%, -100%, 0);
    box-shadow: 0 0px 4px rgba(0, 0, 0, 0); }
  100% {
    transform: translate3d(-50%, 0, 0);
    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.2); } }

@keyframes slideout {
  0% {
    transform: translate3d(-50%, 0, 0);
    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.2); }
  100% {
    transform: translate3d(-50%, -100%, 0);
    box-shadow: 0 0px 4px rgba(0, 0, 0, 0); } }

@keyframes slidebg {
  0% {
    background-position: 0px; }
  100% {
    background-position: 32px; } }

.notifications {
  position: fixed;
  z-index: 2000;
  padding: 8px 16px;
  top: 0;
  left: 50%;
  transform: translate3d(-50%, 0, 0);
  background: #666;
  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.2); }
  .notifications p {
    font-size: 14px;
    text-align: center;
    margin: 0;
    color: #ddd; }
  .notifications.error {
    background: #b63e20; }
  .notifications.success {
    background: #488e48; }
  .notifications.in {
    animation: slidein 0.5s forwards; }
  .notifications.autohide.out {
    animation: slideout 0.5s forwards;
    animation-delay: 1s; }
  .notifications .progress-bar {
    width: 112px;
    height: 8px;
    display: block;
    position: relative;
    background-repeat: repeat-x;
    background-size: 11px 12px;
    background-image: repeating-linear-gradient(-45deg, transparent, transparent 4px, white 4px, white 8px);
    animation: slidebg 1s linear infinite;
    margin: 8px 0; }

* {
  box-sizing: border-box;
  font-family: sans-serif;
  font-weight: 100;
  margin: 0;
  padding: 0;
  color: #666; }

html,
body {
  background: #ddd;
  color: #666;
  font-size: 16px;
  overflow: hidden;
  margin: 0;
  padding: 0;
  height: 100%; }

body {
  min-height: 100%; }

.dashed {
  border: dashed 1px #a6a6a6; }

.wrapper {
  position: relative;
  overflow: hidden; }

.hidden {
  display: none;
  visibility: hidden;
  opacity: 0; }

.app.wrapper {
  width: 100%;
  height: 100%; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5jc3MiLCJzb3VyY2VzIjpbIm1haW4uc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9kcmFndWxhL2Rpc3QvZHJhZ3VsYS5jc3MiLCJwYXJ0aWFscy9fdmFyaWFibGVzLnNjc3MiLCJtaXhpbnMvY2VudGVyLWFic29sdXRlLnNjc3MiLCJtaXhpbnMvYW5pbWF0aW9uLXJvdGF0ZS15LnNjc3MiLCJtaXhpbnMvbWF0ZXJpYWwuc2NzcyIsInBhcnRpYWxzL190eXBvZ3JhcGh5LnNjc3MiLCJwYXJ0aWFscy9fYnV0dG9ucy5zY3NzIiwicGFydGlhbHMvX3Rvb2x0aXAuc2NzcyIsInBhcnRpYWxzL19wcmVsb2FkZXIuc2NzcyIsInBhcnRpYWxzL19hcHAuc2NzcyIsInBhcnRpYWxzL19pdGVtLWxpc3Quc2NzcyIsInBhcnRpYWxzL19pdGVtLWFjdGl2ZS5zY3NzIiwicGFydGlhbHMvX2NvdW50ZXIuc2NzcyIsInBhcnRpYWxzL19ub3RpZmljYXRpb25zLnNjc3MiXSwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnbm9kZV9tb2R1bGVzL2RyYWd1bGEvZGlzdC9kcmFndWxhJztcbkBpbXBvcnQgJ3BhcnRpYWxzL3ZhcmlhYmxlcyc7XG5cbkBpbXBvcnQgJ21peGlucy9jZW50ZXItYWJzb2x1dGUnO1xuQGltcG9ydCAnbWl4aW5zL2FuaW1hdGlvbi1yb3RhdGUteSc7XG5AaW1wb3J0ICdtaXhpbnMvbWF0ZXJpYWwnO1xuXG5AaW1wb3J0ICdwYXJ0aWFscy90eXBvZ3JhcGh5JztcbkBpbXBvcnQgJ3BhcnRpYWxzL2J1dHRvbnMnO1xuQGltcG9ydCAncGFydGlhbHMvdG9vbHRpcCc7XG5cblxuQGltcG9ydCAncGFydGlhbHMvcHJlbG9hZGVyJztcbkBpbXBvcnQgJ3BhcnRpYWxzL2FwcCc7XG5AaW1wb3J0ICdwYXJ0aWFscy9pdGVtLWxpc3QnO1xuQGltcG9ydCAncGFydGlhbHMvaXRlbS1hY3RpdmUnO1xuQGltcG9ydCAncGFydGlhbHMvY291bnRlcic7XG5AaW1wb3J0ICdwYXJ0aWFscy9ub3RpZmljYXRpb25zJztcbi8vIFxuKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogMTAwO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGNvbG9yOiAkZmc7XG59XG5cbmh0bWwsXG5ib2R5IHtcbiAgYmFja2dyb3VuZDogJGJnO1xuICBjb2xvcjogJGZnO1xuICBmb250LXNpemU6IDE2cHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG5ib2R5IHtcbiAgbWluLWhlaWdodDogMTAwJTtcbn1cblxuLmRhc2hlZCB7XG4gIGJvcmRlcjogZGFzaGVkIDFweCAkYm9yZGVyLWNvbG9yO1xufVxuXG4ud3JhcHBlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgLy8gd2lkdGg6IDEwMCU7XG4gIC8vIGhlaWdodDogMTAwJTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLmhpZGRlbiB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgb3BhY2l0eTogMDtcbn1cblxuLmFwcC53cmFwcGVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn0iLCIuZ3UtbWlycm9yIHtcbiAgcG9zaXRpb246IGZpeGVkICFpbXBvcnRhbnQ7XG4gIG1hcmdpbjogMCAhaW1wb3J0YW50O1xuICB6LWluZGV4OiA5OTk5ICFpbXBvcnRhbnQ7XG4gIG9wYWNpdHk6IDAuODtcbiAgLW1zLWZpbHRlcjogXCJwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuQWxwaGEoT3BhY2l0eT04MClcIjtcbiAgZmlsdGVyOiBhbHBoYShvcGFjaXR5PTgwKTtcbn1cbi5ndS1oaWRlIHtcbiAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xufVxuLmd1LXVuc2VsZWN0YWJsZSB7XG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmUgIWltcG9ydGFudDtcbiAgLW1vei11c2VyLXNlbGVjdDogbm9uZSAhaW1wb3J0YW50O1xuICAtbXMtdXNlci1zZWxlY3Q6IG5vbmUgIWltcG9ydGFudDtcbiAgdXNlci1zZWxlY3Q6IG5vbmUgIWltcG9ydGFudDtcbn1cbi5ndS10cmFuc2l0IHtcbiAgb3BhY2l0eTogMC4yO1xuICAtbXMtZmlsdGVyOiBcInByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5BbHBoYShPcGFjaXR5PTIwKVwiO1xuICBmaWx0ZXI6IGFscGhhKG9wYWNpdHk9MjApO1xufVxuIiwiJGJnOiAjZGRkO1xuJGZnOiAjNjY2O1xuXG4kZXJyb3ItYmc6ICNiNjNlMjA7XG4kc3VjY2Vzcy1iZzogIzQ4OGU0ODtcbiRwYWRkaW5nOiAxNnB4O1xuXG4kYnRuLWNvbG9yOiAjZGRkO1xuJGJ0bi1iZzogIzU1NTtcblxuJGJvcmRlci1jb2xvcjogbGlnaHRlbigkZmcsIDI1JSk7IiwiQG1peGluIGNlbnRlci1hYnNvbHV0ZSgpIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgbGVmdDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbn0iLCJAbWl4aW4gYW5pbWF0aW9uLXJvdGF0ZS15KCkge1xuICBAa2V5ZnJhbWVzIHJvdGF0ZS15IHtcbiAgICAwJSB7XG4gICAgICBiYWNrZ3JvdW5kOiByZ2JhKDEwMCwgMTAwLCAxMDAsIDAuMSk7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApIHJvdGF0ZVkoMzYwZGVnKTtcbiAgICAgIFxuICAgIH1cbiAgICAyNyUge1xuICAgICAgYmFja2dyb3VuZDogcmdiYSgxMDAsIDEwMCwgMTAwLCAwLjMpO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAxMDAsIDApIHJvdGF0ZVkoMTgwZGVnKTtcbiAgICB9XG4gICAgMzclIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCkgcm90YXRlWSgwZGVnKTtcbiAgICAgIGJhY2tncm91bmQ6IHJnYmEoMTAwLCAxMDAsIDEwMCwgMC4xNSk7XG4gICAgfVxuICAgIDY2JSB7XG4gICAgICBcbiAgICAgIGJhY2tncm91bmQ6IHJnYmEoMTAwLCAxMDAsIDEwMCwgMC4xMik7XG4gICAgfVxuICAgIDEwMCUge1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKSByb3RhdGVZKDBkZWcpO1xuICAgICAgYmFja2dyb3VuZDogcmdiYSgxMDAsIDEwMCwgMTAwLCAwLjEpO1xuICAgIH1cbiAgfVxufSIsIkBtaXhpbiBtYXRlcmlhbCB7XG4gIHBhZGRpbmc6ICRwYWRkaW5nO1xuICBiYWNrZ3JvdW5kOiBsaWdodGVuKCRiZywgNy41JSk7XG4gIGJveC1zaGFkb3c6IDAgNHB4IDRweCByZ2JhKDAsIDAsIDAsIC4yKTtcbn0iLCJoMSwgaDIsIGgzLCBoNCwgaDUge1xuICBtYXJnaW46IDAuNmVtIGF1dG87XG59XG5cbmgxIHtcblxufVxuXG5oMiB7XG4gIFxufVxuXG5oMyB7XG5cbn1cblxuaDQge1xuXG59XG5cbnAge1xuICBtYXJnaW46IDAuNWVtIGF1dG87XG4gIGxpbmUtaGVpZ2h0OiAxZW07XG59XG5cbmEge1xuXG59XG4iLCIuYnRuIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgY29sb3I6ICRidG4tY29sb3I7XG4gIGJhY2tncm91bmQ6ICRidG4tYmc7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZSAhaW1wb3J0YW50O1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuMjVzIGVhc2UsIGNvbG9yIDAuMjVzIGVhc2U7XG4gIGZvbnQtc2l6ZTogMzJweDtcbiAgYm9yZGVyOiBub25lO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGxpbmUtaGVpZ2h0OiA0OHB4O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIHdpZHRoOiA0OHB4O1xuICBoZWlnaHQ6IDQ4cHg7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgYm94LXNoYWRvdzogMCA0cHggNHB4IHJnYmEoMCwgMCwgMCwgLjIpO1xuICBjdXJzb3I6IHBvaW50ZXI7XG5cbiAgJjpob3ZlciB7XG4gICAgYmFja2dyb3VuZDogZGFya2VuKCRidG4tYmcsIDI1JSk7XG4gICAgY29sb3I6ICBkYXJrZW4oJGJ0bi1jb2xvciwgMjUlKTtcbiAgfVxuXG4gICY6YWN0aXZlIHtcbiAgICBiYWNrZ3JvdW5kOiBpbnZlcnQoJGJ0bi1iZyk7XG4gICAgY29sb3I6ICBpbnZlcnQoJGJ0bi1jb2xvcik7XG4gIH1cblxuICAubWF0ZXJpYWwtaWNvbnMge1xuICAgIGNvbG9yOiAkYmc7XG4gICAgbGluZS1oZWlnaHQ6IDQ4cHggIWltcG9ydGFudDtcbiAgfVxuXG4gICYuYnRuLXNtIHtcbiAgICB3aWR0aDogMzJweDtcbiAgICBoZWlnaHQ6IDMycHg7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAzMnB4O1xuICAgIC5tYXRlcmlhbC1pY29ucyB7XG4gICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICBjb2xvcjogJGJnO1xuICAgICAgbGluZS1oZWlnaHQ6IDMycHggIWltcG9ydGFudDtcbiAgICB9XG4gIH1cblxufSIsIi50b29sdGlwIHtcbiAgQGluY2x1ZGUgbWF0ZXJpYWw7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogMTAwO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC41cyBlYXNlO1xuXG5cbiAgJjpiZWZvcmUsXG4gICY6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAwO1xuICAgIGhlaWdodDogMDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpIHJvdGF0ZSg0NWRlZyk7XG4gIH1cblxuICAmOmFmdGVyIHtcbiAgICByaWdodDogLTRweDtcbiAgICBib3JkZXItcmlnaHQ6IHNvbGlkIDE2cHggbGlnaHRlbigkYmcsIDcuNSUpO1xuICAgIGJvcmRlci1ib3R0b206IHNvbGlkIDE2cHggdHJhbnNwYXJlbnQ7XG4gIH1cbn0iLCIucHJlbG9hZGVyLXdyYXBwZXIge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgei1pbmRleDogMTAwMDtcbiAgYmFja2dyb3VuZDogJGJnO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNzVzIGVhc2U7XG4gIG9wYWNpdHk6IDE7XG4gIFxuICAucHJlbG9hZGVyLWNvbnRhaW5lciB7XG4gICAgQGluY2x1ZGUgY2VudGVyLWFic29sdXRlO1xuICAgIC5wcmVsb2FkZXIge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBtYXJnaW46IGF1dG87XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICB3aWR0aDogNDhweDtcbiAgICAgIGhlaWdodDogNDhweDtcbiAgICAgIGJhY2tncm91bmQ6IHJnYmEoMTAwLCAxMDAsIDEwMCwgMC4xKTtcbiAgICAgIGFuaW1hdGlvbjogcm90YXRlLXkgMS4yNXMgZWFzZSBpbmZpbml0ZTtcbiAgICB9XG4gIH1cbn0iLCJAaW5jbHVkZSBhbmltYXRpb24tcm90YXRlLXk7XG5cbiNhcHAge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG5cbiAgJi5sb2FkaW5nIHtcbiAgICBcbiAgfVxuXG4gIC50b29sdGlwIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIGJvdHRvbTogMjRweDtcbiAgICByaWdodDogMTAwcHg7XG5cbiAgfVxuICBcbiAgYXNpZGUge1xuXG4gIH1cbiAgXG4gIG1haW4ge1xuICAgIHdpZHRoOiA2Ni42NiU7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGZsb2F0OiByaWdodDtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBcbiAgICAuaXRlbS1hY3RpdmUge1xuICAgICAgQGluY2x1ZGUgY2VudGVyLWFic29sdXRlO1xuICAgIH1cbiAgICAuY291bnRlciB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBib3R0b206ICRwYWRkaW5nICogMjtcbiAgICAgIGxlZnQ6ICRwYWRkaW5nICogMjtcbiAgICB9XG4gICAgLmJ0bi1hZGQge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgYm90dG9tOiAkcGFkZGluZyAqIDI7XG4gICAgICByaWdodDogJHBhZGRpbmcgKiAyO1xuICAgIH1cbiAgfVxuXG4gICYubm8taXRlbXMge1xuICAgIC50b29sdGlwIHtcbiAgICAgIG9wYWNpdHk6IDE7XG4gICAgfVxuICB9XG59IiwiYXNpZGUuaXRlbS1saXN0IHtcblxuICB3aWR0aDogMzMuMzMlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZmxvYXQ6IGxlZnQ7XG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbiAgcGFkZGluZzogJHBhZGRpbmc7XG5cbiAgLndyYXBwZXIge1xuICAgIG1pbi1oZWlnaHQ6IDEwMCU7XG4gIH1cbiAgXG4gIC5pdGVtIHtcbiAgICBib3JkZXItYm90dG9tOiBkYXNoZWQgMXB4ICRib3JkZXItY29sb3I7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBvcGFjaXR5OiAwLjg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGN1cnNvcjogbW92ZTsgLyogZmFsbGJhY2sgaWYgZ3JhYiBjdXJzb3IgaXMgdW5zdXBwb3J0ZWQgKi9cbiAgICBjdXJzb3I6IGdyYWI7XG4gICAgY3Vyc29yOiAtbW96LWdyYWI7XG4gICAgY3Vyc29yOiAtd2Via2l0LWdyYWI7XG5cbiAgICAuaW1nLWNvbnRhaW5lciB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIHdpZHRoOiAxMDBweDtcbiAgICAgIGhlaWdodDogMTAwcHg7XG4gICAgICBiYWNrZ3JvdW5kOiAjNTU1O1xuXG4gICAgICBpbWcge1xuICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICAgIG1pbi13aWR0aDogMTAwcHg7XG4gICAgICAgIGhlaWdodDogYXV0bztcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjI1cyBlYXNlO1xuICAgICAgfVxuXG4gICAgICAmLmxvYWRpbmcge1xuICAgICAgICBhbmltYXRpb246IHJvdGF0ZS15IDEuMjVzIGVhc2UgaW5maW5pdGU7XG4gICAgICAgIGltZyB7XG4gICAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgLm1hdGVyaWFsLWljb25zLnBsYWNlaG9sZGVyIHtcbiAgICAgICAgQGluY2x1ZGUgY2VudGVyLWFic29sdXRlO1xuICAgICAgICBjb2xvcjogI2NjYztcbiAgICAgICAgZm9udC1zaXplOiAzMnB4O1xuICAgICAgfVxuICAgIH1cblxuXG4gICAgcCB7XG4gICAgICB3aWR0aDogY2FsYygxMDAlIC0gMTAwcHgpO1xuICAgICAgaGVpZ2h0OiAxMDBweDtcbiAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgcGFkZGluZzogOHB4O1xuICAgICAgZm9udC13ZWlnaHQ6IDEwMDtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgIGNvbG9yOiAkZmc7XG5cbiAgICB9XG5cbiAgICAuYnRuIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHJpZ2h0OiA4cHg7XG4gICAgICBvcGFjaXR5OiAwO1xuICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjI1cyBlYXNlO1xuXG4gICAgICAmLmJ0bi1kZWxldGUge1xuICAgICAgICB0b3A6IDhweDtcbiAgICAgIH1cbiAgICAgICYuYnRuLWVkaXQge1xuICAgICAgICB0b3A6IDQ4cHg7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJjpob3ZlciB7XG4gICAgICAuYnRuIHtcbiAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmLmFjdGl2ZSwgJjpob3ZlciB7XG4gICAgICBvcGFjaXR5OiAxO1xuICAgICAgYmFja2dyb3VuZDogbGlnaHRlbigkYmcsIDcuNSUpO1xuICAgIH1cblxuICAgICYuZ3UtbWlycm9yIHtcbiAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgb3BhY2l0eTogMTtcbiAgICAgIGJveC1zaGFkb3c6IDhweCA4cHggMCByZ2JhKDEwMCwgMTAwLCAxMDAsIDAuMjUpO1xuICAgICAgYm9yZGVyLWJvdHRvbTogMDtcbiAgICAgIGN1cnNvcjogZ3JhYmJpbmc7XG4gICAgICBjdXJzb3I6IC1tb3otZ3JhYmJpbmc7XG4gICAgICBjdXJzb3I6IC13ZWJraXQtZ3JhYmJpbmc7XG4gICAgICAuYnRuIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIH1cbiAgICB9XG4gICAgJi5ndS10cmFuc2l0IHtcbiAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQgMC41cyBlYXNlO1xuICAgICAgYmFja2dyb3VuZDogI2NjYztcblxuICAgICAgLmJ0biB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICB9XG4gICAgICAmID4gZGl2IHtcbiAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjVzIGVhc2U7XG4gICAgICAgIG9wYWNpdHk6IDA7XG4gICAgICB9XG4gICAgfVxuXG4gIH1cblxuICAubm8taXRlbXMge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gIH1cbn0iLCJtYWluIHtcbiAgLml0ZW0tYWN0aXZlIHtcbiAgICBcbiAgICBAaW5jbHVkZSBtYXRlcmlhbDtcblxuICAgIC5pdGVtLWFjdGl2ZS1pbWcsIC5uby1pdGVtcyB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBtYXJnaW46IGF1dG87XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIG1hcmdpbi1ib3R0b206ICRwYWRkaW5nO1xuICAgICAgd2lkdGg6IDMyMHB4O1xuICAgICAgaGVpZ2h0OiAzMjBweDtcbiAgICAgIGJhY2tncm91bmQ6ICNkZWRlZGU7XG5cbiAgICAgIGltZyB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgfVxuICAgIH1cblxuICAgIC5pdGVtLWFjdGl2ZS10eHQge1xuICAgICAgd2lkdGg6ICAzMjBweDtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIG1hcmdpbjogYXV0bztcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cblxuICAgIC5idG4tZWRpdCB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICByaWdodDogLTI0cHg7XG4gICAgICBib3R0b206IC0yNHB4O1xuICAgICAgb3BhY2l0eTogMDtcbiAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4yNXMgZWFzZTtcbiAgICB9XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgIC5idG4tZWRpdCB7XG4gICAgICAgIG9wYWNpdHk6IDEgIWltcG9ydGFudDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmLml0ZW0tZWRpdCB7XG4gICAgICAuaXRlbS1hY3RpdmUtaW1nIHtcbiAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuXG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgIC5idG4tdXBsb2FkIHtcbiAgICAgICAgICAgIG9wYWNpdHk6IDEgIWltcG9ydGFudDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgc3Bhbi5lcnJvciB7XG4gICAgICAgICAgQGluY2x1ZGUgY2VudGVyLWFic29sdXRlO1xuICAgICAgICAgIHRvcDogNzAlO1xuICAgICAgICAgIGNvbG9yOiBsaWdodGVuKCRlcnJvci1iZywgMjUlKTtcbiAgICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgfVxuICAgICAgICAmLmVycm9yIHtcbiAgICAgICAgICBib3JkZXI6IHNvbGlkIDFweCBsaWdodGVuKCRlcnJvci1iZywgMjUlKTtcbiAgICAgICAgICBzcGFuLmVycm9yIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgLmJ0bi1kZWxldGUge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogLTI0cHg7XG4gICAgICAgIHJpZ2h0OiAtMjRweDtcbiAgICAgIH1cbiAgICAgIC5idG4tdXBsb2FkIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICAgICAgb3BhY2l0eTogMC41O1xuICAgICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMjVzIGVhc2U7XG4gICAgICB9XG4gICAgICAuYnRuLW9rIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBib3R0b206IC0yNHB4O1xuICAgICAgICByaWdodDogLTI0cHg7XG4gICAgICB9XG4gICAgICB0ZXh0YXJlYSB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIG1pbi1oZWlnaHQ6IDEwOHB4O1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAtNHB4O1xuICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjc1KTtcbiAgICAgICAgcGFkZGluZzogOHB4O1xuXG4gICAgICAgICY6Zm9jdXMge1xuICAgICAgICAgIG91dGxpbmU6IDA7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLm5vLWl0ZW1zIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICBoMSB7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICAgICAgZm9udC1zaXplOiAzNnB4O1xuICAgICAgICBwYWRkaW5nLXRvcDogY2FsYyg0MCUgLSAyNHB4KTtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgfVxuICAgICAgcCB7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgbWFyZ2luLXRvcDogMTAwcHg7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbn0iLCIuY291bnRlciB7XG4gIFxuICBAaW5jbHVkZSBtYXRlcmlhbDtcbiAgcGFkZGluZzogMCAjeyRwYWRkaW5nIC8gMn07XG59IiwiQGtleWZyYW1lcyBzbGlkZWluIHtcbiAgMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoLTUwJSwgLTEwMCUsIDApO1xuICAgIGJveC1zaGFkb3c6IDAgMHB4IDRweCByZ2JhKDAsIDAsIDAsIDApO1xuICB9XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoLTUwJSwgMCwgMCk7XG4gICAgYm94LXNoYWRvdzogMCA0cHggNHB4IHJnYmEoMCwgMCwgMCwgLjIpO1xuICB9XG59XG5cbkBrZXlmcmFtZXMgc2xpZGVvdXQge1xuICAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgtNTAlLCAwLCAwKTtcbiAgICBib3gtc2hhZG93OiAwIDRweCA0cHggcmdiYSgwLCAwLCAwLCAuMik7XG4gIH1cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgtNTAlLCAtMTAwJSwgMCk7XG4gICAgYm94LXNoYWRvdzogMCAwcHggNHB4IHJnYmEoMCwgMCwgMCwgMCk7XG4gIH1cbn1cblxuQGtleWZyYW1lcyBzbGlkZWJnIHtcbiAgMCUge1xuXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMHB4O1xuICB9XG4gIDEwMCUge1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDMycHg7XG4gIH1cbn1cbi5ub3RpZmljYXRpb25zIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB6LWluZGV4OiAyMDAwO1xuICBwYWRkaW5nOiA4cHggMTZweDtcbiAgdG9wOiAwO1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoLTUwJSwgMCwgMCk7XG4gIGJhY2tncm91bmQ6ICRmZztcbiAgYm94LXNoYWRvdzogMCA0cHggNHB4IHJnYmEoMCwgMCwgMCwgLjIpO1xuXG4gIHAge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luOiAwO1xuICAgIGNvbG9yOiAkYmc7XG4gIH1cblxuICAmLmVycm9yIHtcbiAgICBiYWNrZ3JvdW5kOiAkZXJyb3ItYmc7XG4gIH1cblxuICAmLnN1Y2Nlc3Mge1xuICAgIGJhY2tncm91bmQ6ICRzdWNjZXNzLWJnO1xuICB9XG5cbiAgJi5pbiB7XG4gICAgYW5pbWF0aW9uOiBzbGlkZWluIDAuNXMgZm9yd2FyZHM7XG4gIH1cbiAgJi5hdXRvaGlkZS5vdXQge1xuICAgIGFuaW1hdGlvbjogc2xpZGVvdXQgMC41cyBmb3J3YXJkcztcbiAgICBhbmltYXRpb24tZGVsYXk6IDFzO1xuICB9XG5cbiAgLnByb2dyZXNzLWJhciB7XG4gICAgd2lkdGg6IDExMnB4O1xuICAgIGhlaWdodDogJHBhZGRpbmcgLyAyO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0LXg7XG4gICAgYmFja2dyb3VuZC1zaXplOiAxMXB4IDEycHg7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogcmVwZWF0aW5nLWxpbmVhci1ncmFkaWVudCgtNDVkZWcsIHRyYW5zcGFyZW50LCB0cmFuc3BhcmVudCA0cHgsIHdoaXRlIDRweCwgd2hpdGUgOHB4KTtcbiAgICBhbmltYXRpb246IHNsaWRlYmcgMXMgbGluZWFyIGluZmluaXRlO1xuICAgIG1hcmdpbjogI3sgJHBhZGRpbmcgLyAyIH0gMDtcbiAgfVxufSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUNBQSxBQUFBLFVBQVUsQ0FBQztFQUNULFFBQVEsRUFBRSxnQkFBZ0I7RUFDMUIsTUFBTSxFQUFFLFlBQVk7RUFDcEIsT0FBTyxFQUFFLGVBQWU7RUFDeEIsT0FBTyxFQUFFLEdBQUc7RUFDWixVQUFVLEVBQUUscURBQXFEO0VBQ2pFLE1BQU0sRUFBRSxpQkFBaUIsR0FDMUI7O0FBQ0QsQUFBQSxRQUFRLENBQUM7RUFDUCxPQUFPLEVBQUUsZUFBZSxHQUN6Qjs7QUFDRCxBQUFBLGdCQUFnQixDQUFDO0VBQ2YsbUJBQW1CLEVBQUUsZUFBZTtFQUNwQyxnQkFBZ0IsRUFBRSxlQUFlO0VBQ2pDLGVBQWUsRUFBRSxl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 */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
